WITH
  events_data AS (
  SELECT
    user_pseudo_id,
    PARSE_DATE('%Y%m%d', event_date) AS event_date,
    MIN(PARSE_DATE('%Y%m%d', event_date)) OVER (PARTITION BY user_pseudo_id) AS first_event_date,
    DATE_TRUNC(MIN(PARSE_DATE('%Y%m%d', event_date)) OVER (PARTITION BY user_pseudo_id), WEEK) AS first_week,
    purchase_revenue_in_usd AS purchase_revenue
  FROM
    `tc-da-1.turing_data_analytics.raw_events`)

SELECT
  DATE_TRUNC(first_event_date, WEEK) AS cohort_week,
  COUNT(DISTINCT user_pseudo_id) AS customers,
  SUM(CASE
      WHEN event_date < DATE_ADD(first_week, INTERVAL 1 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_0,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 1 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 2 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_1,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 2 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 3 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_2,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 3 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 4 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_3,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 4 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 5 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_4,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 5 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 6 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_5,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 6 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 7 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_6,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 7 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 8 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_7,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 8 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 9 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_8,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 9 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 10 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_9,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 10 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 11 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_10,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 11 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 12 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_11,
  SUM(CASE
      WHEN event_date >= DATE_ADD(first_week, INTERVAL 12 WEEK) AND event_date < DATE_ADD(first_week, INTERVAL 13 WEEK) THEN purchase_revenue
      ELSE 0
  END
    )/COUNT(DISTINCT user_pseudo_id) AS week_12
FROM
  events_data
WHERE
  DATE_TRUNC(first_event_date, WEEK) < '2021-01-31'
GROUP BY
  cohort_week
ORDER BY
  cohort_week;